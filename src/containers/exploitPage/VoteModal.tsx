import React, { useState } from 'react';
import NextImage from '@/components/NextImage';
import Typography from '@/components/Typography';
import Button from '@/components/buttons/Button';

interface Props {
  selectedProduct: Tenant;
  closeModal: () => void;
}

const VoteModal: React.FC<Props> = ({ selectedProduct, closeModal }) => {
  const [showAllText, setShowAllText] = useState(false);

  const toggleShowAllText = () => {
    setShowAllText(!showAllText);
  };

  return (
    <div className='relative lg:w-[700px] md:w-[600px] sm:w-[500px] w-[288px] top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-primary-100 p-6 rounded-md'>
      <div className='flex h-full'>
        <div className='pr-6 flex items-center'>
          <NextImage
            src='/svg/exploit/exploit_frame.svg'
            alt={selectedProduct.nama_produk}
            width={200}
            height={200}
            className='lg:w-[300px] md:w-[250px] w-[100px]'
          />
        </div>
        <div className='flex flex-col justify-between'>
          <div className='justify-start'>
            <Typography
              font='baloo'
              weight='bold'
              className='text-[20px] sm:text-[24px] md:text-[24px] lg:text-[26px]'
            >
              {selectedProduct.nama_produk.length > 20
                ? showAllText
                  ? selectedProduct.nama_produk
                  : selectedProduct.nama_produk.slice(0, 20) + '... '
                : selectedProduct.nama_produk}
              {selectedProduct.nama_produk.length > 20 && (
                <span
                  onClick={toggleShowAllText}
                  className='text-primary-700 cursor-pointer hover:underline'
                >
                  {showAllText ? ' Show less' : ' Show more'}
                </span>
              )}
            </Typography>
            <Typography
              font='poppins'
              weight='medium'
              className='mb-6 text-[14px] sm:text-[16px] md:text-[16px] lg:text-[18px]'
            >
              {selectedProduct.nama_tenant}
            </Typography>
            <Typography
              font='poppins'
              weight='medium'
              className='text-[9px] sm:text-[10px] md:text-[12px] lg:text-[12px]'
            >
              {selectedProduct.detail_produk.length > 300
                ? showAllText
                  ? selectedProduct.detail_produk
                  : selectedProduct.detail_produk.slice(0, 300) + '... '
                : selectedProduct.detail_produk}
              {selectedProduct.detail_produk.length > 300 && (
                <span
                  onClick={toggleShowAllText}
                  className='text-primary-700 cursor-pointer hover:underline'
                >
                  {showAllText ? ' Show less' : ' Show more'}
                </span>
              )}
            </Typography>
          </div>
          <div className='flex items-end lg:h-10 md:h-10 sm:h-10 h-6 mt-4 space-x-4'>
            <Button
              onClick={closeModal}
              className='mt-2 bg-primary-600 hover:bg-primary-800 active:bg-primary-900 rounded-lg w-[80px] h-full'
            >
              <Typography
                font='poppins'
                weight='bold'
                color='white'
                className='text-[10px] sm:text-[12px] md:text-[14px] lg:text-[16px]'
              >
                Vote
              </Typography>
            </Button>
            <div className='w-[200x] h-full'>
              <input
                className='text-[10px] sm:text-[12px] md:text-[14px] lg:text-[16px] block w-full h-full rounded-lg appearance-none border border-whites-1100 text-whites-1100 bg-primary-100 focus:border-whites-1100 focus:outline-none leading-tight'
                id='token'
                type='text'
                placeholder='Insert token'
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default VoteModal;
