import React, { useState } from 'react';
import { IoMdClose } from 'react-icons/io';

import Button from '@/components/buttons/Button';
import NextImage from '@/components/NextImage';
import { DANGER_TOAST, showToast, SUCCESS_TOAST } from '@/components/Toast';
import Typography from '@/components/Typography';
import { Tenant } from '@/containers/exploitPage/VotePage';
import api from '@/lib/api';

interface Props {
  selectedProduct: Tenant;
  closeModal: () => void;
}

const VoteModal: React.FC<Props> = ({ selectedProduct, closeModal }) => {
  const [showProductName, setShowProductName] = useState(false);
  const [showProductDetail, setShowProductDetail] = useState(false);
  const [voteCount, setVoteCount] = useState(selectedProduct.jumlah_suara);
  const [token, setToken] = useState('');

  const toggleProductName = () => {
    setShowProductName(!showProductName);
  };

  const toggleProductDetail = () => {
    setShowProductDetail(!showProductDetail);
  };

  const handleVote = async () => {
    try {
      const response = await api.patch('/exploit/vote', {
        token: token,
        tenant_id: selectedProduct.id,
      });
      showToast(response.data.message, SUCCESS_TOAST);
      setVoteCount(voteCount + 1);
      setToken('');
    } catch (error) {
      showToast('Gagal melakukan vote', DANGER_TOAST);
      setToken('');
    }
  };

  return (
    <div className='relative lg:w-[700px] md:w-[650px] sm:w-[320px] w-[288px] h-fit p-4 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-primary-100 rounded-xl'>
      <div className='w-full flex items-end justify-end mb-2 sm:mb-2 md:mb-0'>
        <IoMdClose
          size={22}
          onClick={closeModal}
          className='cursor-pointer'
        ></IoMdClose>
      </div>
      <div className='justify-center md:flex-row flex-col flex items-center h-full'>
        <div className='h-full w-full md:pr-4 pb-4 flex items-center justify-center'>
          {selectedProduct.foto_produk ? (
            <NextImage
              src={`https://ara-its.id/uploads/exploit/${selectedProduct?.foto_produk}`}
              alt={selectedProduct.nama_produk}
              width={230}
              height={200}
              className='lg:w-[384px] md:w-[350px] sm:w-[282px] w-[250px]'
            />
          ) : (
            <NextImage
              src='/svg/exploit/opengraph2.svg'
              alt={selectedProduct.nama_produk}
              width={230}
              height={200}
              className='lg:w-[384px] md:w-[350px] sm:w-[282px] w-[250px]'
            />
          )}
        </div>
        <div className='flex flex-col items-start h-full'>
          <div className='flex-col flex lg:mt-0 md:mt-0 sm:mt-4 mt-0'>
            <Typography
              font='baloo'
              weight='bold'
              className='text-[22px] sm:text-[24px] md:text-[24px] lg:text-[26px]'
            >
              {selectedProduct.nama_produk.length > 20
                ? showProductName
                  ? selectedProduct.nama_produk
                  : selectedProduct.nama_produk.slice(0, 20) + '... '
                : selectedProduct.nama_produk}
              {selectedProduct.nama_produk.length > 20 && (
                <span
                  onClick={toggleProductName}
                  className='text-primary-700 cursor-pointer hover:underline'
                >
                  {showProductName ? ' Show less' : ' Show more'}
                </span>
              )}
            </Typography>
            <Typography
              font='poppins'
              weight='medium'
              className='text-[14px] sm:text-[16px] md:text-[16px] lg:text-[18px]'
            >
              {selectedProduct.nama_tenant}
            </Typography>
            <Typography
              font='poppins'
              weight='medium'
              className='mt-4 text-[11px] sm:text-[12px] md:text-[12px] lg:text-[14px]'
            >
              {selectedProduct.detail_produk.length > 300
                ? showProductDetail
                  ? selectedProduct.detail_produk
                  : selectedProduct.detail_produk.slice(0, 300) + '... '
                : selectedProduct.detail_produk}
              {selectedProduct.detail_produk.length > 300 && (
                <span
                  onClick={toggleProductDetail}
                  className='text-primary-700 cursor-pointer hover:underline'
                >
                  {showProductDetail ? ' Show less' : ' Show more'}
                </span>
              )}
            </Typography>
          </div>
          <div className='flex items-end w-full justify-between space-x-4 md:h-10 sm:h-10 h-6 mt-4'>
            <Button
              onClick={handleVote}
              className='mt-2 bg-primary-600 hover:bg-primary-800 active:bg-primary-900 rounded-lg w-[80px] h-full'
            >
              <Typography
                font='poppins'
                weight='bold'
                color='white'
                className='text-[10px] sm:text-[12px] md:text-[12px] lg:text-[16px]'
              >
                Vote
              </Typography>
            </Button>
            <div className='w-[200x] h-full'>
              <input
                className='text-[10px] sm:text-[12px] md:text-[14px] lg:text-[16px] block w-full h-full rounded-lg appearance-none border border-whites-1100 text-whites-1100 bg-primary-100 focus:border-whites-1100 focus:outline-none leading-tight'
                id='token'
                type='text'
                placeholder='Insert token'
                value={token}
                onChange={(e) => setToken(e.target.value)}
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default VoteModal;
