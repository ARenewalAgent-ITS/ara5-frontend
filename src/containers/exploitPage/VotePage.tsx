'use client';

import React, { useEffect, useState } from 'react';

import Button from '@/components/buttons/Button';
import Footer from '@/components/layouts/Footer';
import Navbar from '@/components/layouts/Navbar';
import NextImage from '@/components/NextImage';
import Typography from '@/components/Typography';
import VoteModal from '@/containers/exploitPage/VoteModal';
import api from '@/lib/api';
import { ApiReturn } from '@/types/api';

export interface Tenant {
  id: string;
  foto_produk: File;
  nama_tenant: string;
  nama_produk: string;
  detail_produk: string;
  jumlah_suara: number;
}

const VotePage: React.FC = () => {
  const [tenants, setTenants] = useState<Tenant[]>([]);
  const [selectedProduct, setSelectedProduct] = useState<Tenant | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [showAllText, setShowAllText] = useState(false);

  const toggleShowAllText = () => {
    setShowAllText(!showAllText);
  };

  useEffect(() => {
    fetchTenants();
  }, []);

  const fetchTenants = async () => {
    try {
      const response = await api.get<ApiReturn<Tenant[]>>('/tenants');
      setTenants(response.data.data);
    } catch (error) {
      throw new Error('Error fetching tenants:');
    }
  };

  const handleVote = (tenant: Tenant) => {
    setSelectedProduct(tenant);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
  };

  return (
    <>
      <Navbar />
      <section className='pb-20 justify-center items-center relative'>
        <div className='relative h-[250px] sm:h-[400px] bg-[#A0EDFF] w-full flex justify-center items-center'>
          <NextImage
            src={'/svg/landpage/big_cloud_left.svg'}
            alt='background'
            width={260}
            height={203.14}
            className='absolute left-0 top-16 z-20 md:w-[200px] sm:w-[160px] w-[140px] animate-float hidden sm:inline-block'
          />
          <NextImage
            src={'/svg/landpage/little_cloud_left.svg'}
            alt='background'
            width={169.97}
            height={103.14}
            className='absolute top-72 z-20 lg:left-40 md:left-28 sm:left-24 left-16 lg:w-[160px] md:w-[140px] sm:w-[110px] w-[100px] animate-float hidden sm:inline-block'
          />
          <div className='flex flex-col items-center'>
            <NextImage
              src={'/svg/exploit/exploit_plank.svg'}
              alt='plank exploit'
              width={352}
              height={97.87}
              className='mt-10 sm:mt-5 w-[260px] sm:w-[300px] md:w-[350px]'
            />
            <Typography
              weight='medium'
              font='poppins'
              variant='h6'
              as='h6'
              className='mt-5'
            >
              Choose your best team!
            </Typography>
          </div>
          <NextImage
            src={'/svg/landpage/big_cloud_right.svg'}
            alt='background'
            width={259.97}
            height={203.14}
            className='absolute right-0 top-16 z-20 md:w-[200px] sm:w-[160px] w-[140px] animate-floats hidden sm:inline-block'
          />
          <NextImage
            src={'/svg/landpage/little_cloud_right.svg'}
            alt='background'
            width={169.97}
            height={103.14}
            className='absolute top-72 z-20 lg:right-40 md:right-28 sm:right-24 right-16 lg:w-[160px] md:w-[140px] sm:w-[110px] w-[100px] animate-floats hidden sm:inline-block'
          />
        </div>
        <div className='relative m-6 sm:px-10 lg:mt-12 xl:px-28 md:px-12 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 lg:gap-6'>
          {tenants.map((tenant) => (
            <div key={tenant.id}>
              <div className='bg-primary-600 bg-opacity-25 w-full p-4 rounded-t-xl'>
                <NextImage
                  src={`https://ara-its.id/uploads/exploit/${tenant?.foto_produk}`}
                  alt={tenant.nama_produk}
                  width={100}
                  height={100}
                  className='w-full'
                />
              </div>
              <div className='bg-primary-600 w-full p-4 xl:p-6 rounded-b-xl'>
                <Typography
                  font='poppins'
                  weight='bold'
                  color='white'
                  className='text-[14px] lg:text-[16px]'
                >
                  {tenant.nama_produk.length > 20
                    ? showAllText
                      ? tenant.nama_produk
                      : tenant.nama_produk.slice(0, 20) + '... '
                    : tenant.nama_produk}
                  {tenant.nama_produk.length > 20 && (
                    <span
                      onClick={toggleShowAllText}
                      className='opacity-50 cursor-pointer hover:underline'
                    >
                      {showAllText ? ' Show less' : 'Show more'}
                    </span>
                  )}
                </Typography>
                <Typography
                  font='poppins'
                  weight='medium'
                  color='white'
                  className='text-[14px] lg:text-[16px]'
                >
                  {tenant.nama_tenant}
                </Typography>
                <Button
                  onClick={() => handleVote(tenant)}
                  className='py-2 mt-2 bg-primary-700 hover:bg-primary-800 active:bg-primary-900 w-full rounded-lg'
                >
                  <Typography
                    font='poppins'
                    weight='bold'
                    color='white'
                    className='text-[14px]'
                  >
                    Vote
                  </Typography>
                </Button>
              </div>
            </div>
          ))}
        </div>
      </section>
      <Footer />

      {selectedProduct && (
        <div
          className={`fixed inset-0 bg-black bg-opacity-50 z-50 ${
            isModalOpen ? '' : 'hidden'
          }`}
        >
          <VoteModal
            selectedProduct={selectedProduct}
            closeModal={closeModal}
          />
        </div>
      )}
    </>
  );
};

export default VotePage;
