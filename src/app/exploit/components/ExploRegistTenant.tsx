'use client';

import { useMutation } from '@tanstack/react-query';
import { useRouter } from 'next/navigation';
import React, { useState } from 'react';
import { FormProvider, useForm } from 'react-hook-form';

import Button from '@/components/buttons/Button';
import DropzoneInput from '@/components/form/DropzoneInput';
import Input from '@/components/form/Input';
import TextArea from '@/components/form/TextArea';
import Modal from '@/components/modal/Modal';
import Typography from '@/components/Typography';
import {
  REG_EMAIL,
  REG_GENERAL,
  REG_GOOGLE_DRIVE_URL,
  REG_NISN,
  REG_PHONE,
} from '@/constants/regex';
import useMutationToast from '@/hooks/useMutationToast';
import api from '@/lib/api';
import clsxm from '@/lib/clsxm';
import { RegisterExploTenant } from '@/types/entities/register';

export default function ExploRegistTenant() {
  const [modalOpen, setModalOpen] = useState(false);

  const methods = useForm<RegisterExploTenant>();
  const router = useRouter();

  const { mutateAsync: daftar, isLoading: daftarIsLoading } = useMutationToast<
    void,
    RegisterExploTenant
  >(
    useMutation(
      (data) => {
        return api.post('/exploit/daftar', data, {
          headers: {
            'Content-Type': 'multipart/form-data',
          },
        });
      },
      {
        onSuccess: () => {
          localStorage.setItem('daftarTenantIsDone', 'true');
          methods.reset();
          router.push('/exploit');
        },
      }
    )
  );

  const handleConfirm = async (data: RegisterExploTenant) => {
    const formData: RegisterExploTenant = {
      nama_tenant: data.nama_tenant,
      institusi: data.institusi,
      bidang_teknologi: data.bidang_teknologi,
      nama_ketua: data.nama_ketua,
      nisn_ketua: data.nisn_ketua,
      kartu_pelajar: data.kartu_pelajar,
      email_ketua: data.email_ketua,
      no_wa_ketua: data.no_wa_ketua,
      nama_produk: data.nama_produk,
      detail_produk: data?.detail_produk,
      foto_produk: data?.foto_produk,
      link_gdrive: data.link_gdrive,
    };
    await daftar(formData);
    // console.log(formData);
  };

  const onSubmit = () => {
    setModalOpen(true);
  };

  const handleCancel = () => {
    setModalOpen(false);
  };

  return (
    <div className='lg:px-4 xl:px-12 2xl:px-14'>
      <div className='flex flex-col justify-center gap-8 lg:gap-14 px-6 py-7 lg:px-0'>
        <div className='flex flex-col sm:flex-row sm:gap-3 sm:mx-auto lg:flex-col lg:mx-0'>
          <Typography
            variant='h3'
            font='baloo'
            weight='extrabold'
            className='lg:text-[48px] xl:text-[64px] text-[36px] leading-[64px] block text-whites-1100'
          >
            Pendaftaran Tenant ExploIT
          </Typography>
        </div>
        <FormProvider {...methods}>
          <form
            onSubmit={methods.handleSubmit(onSubmit)}
            className='space-y-12'
          >
            <div className='space-y-6'>
              <Input
                id='nama_tenant'
                label='Nama Tenant'
                placeholder='Masukkan nama tenant'
                validation={{
                  required: 'Nama Tenant tidak boleh kosong!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan nama tenant yang valid. Hanya boleh mengandung huruf, angka, spasi, tanda hubung, tanda petik satu, koma, dan titik.',
                  },
                }}
              />
              <Input
                id='institusi'
                label='Institusi / Sekolah'
                placeholder='Masukkan institusi asal / sekolah'
                validation={{
                  required: 'Institusi / Sekolah tidak boleh kosong!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan nama institusi yang valid. Hanya boleh mengandung huruf, angka, spasi, tanda hubung, tanda petik satu, koma, dan titik.',
                  },
                }}
              />
              <Input
                id='bidang_teknologi'
                label='Bidang Teknologi'
                placeholder='Masukkan bidang teknologi'
                validation={{
                  required: 'Bidang teknologi harap diisi!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan bidang teknologi yang valid. Hanya boleh mengandung huruf, angka, spasi, tanda hubung, tanda petik satu, koma, dan titik.',
                  },
                }}
              />
              <Input
                id='nama_ketua'
                label='Nama Ketua'
                placeholder='Masukkan nama ketua'
                validation={{
                  required: 'Nama Ketua tidak boleh kosong!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan nama lengkap yang valid. Hanya boleh mengandung huruf, angka, spasi, tanda hubung, tanda petik satu, koma, dan titik.',
                  },
                }}
              />
              <Input
                id='nisn_ketua'
                label='NISN Ketua'
                placeholder='Masukkan NISN ketua'
                validation={{
                  required: 'NISN Ketua tidak boleh kosong!',
                  pattern: {
                    value: REG_NISN,
                    message:
                      'Harap masukkan NISN yang valid. Terdiri dari 10 digit angka.',
                  },
                }}
              />
              <DropzoneInput
                id='kartu_pelajar'
                label='Kartu Pelajar (Opsional)'
                accept={{ 'image/*': ['.png', '.jpg', '.jpeg'] }}
                className={clsxm('bg-whites-100')}
                helperText='Max file 3 MB.'
              />
              <Input
                id='email_ketua'
                label='Email Ketua'
                placeholder='Masukkan email ketua'
                validation={{
                  required: 'Email ketua tidak boleh kosong!',
                  pattern: {
                    value: REG_EMAIL,
                    message: 'Berikan alamat email yang sesuai!',
                  },
                }}
              />
              <Input
                id='no_wa_ketua'
                label='Nomor Telepon/WA Ketua'
                placeholder='Nomor telepon/wa ketua, ex: +6281234567890.'
                validation={{
                  required: 'Nomor telepon ketua harap diisi!',
                  pattern: {
                    value: REG_PHONE,
                    message:
                      'Harap masukkan nomor telepon/wa yang valid dengan format yang sesuai, ex: +6281234567890.',
                  },
                }}
              />
              <Input
                id='nama_produk'
                label='Nama Produk'
                placeholder='Masukkan nama produk'
                validation={{
                  required: 'Nama Produk perlu diisi!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan nama produk yang valid. Hanya boleh mengandung huruf, angka, spasi, tanda hubung, tanda petik satu, koma, dan titik.',
                  },
                }}
              />
              <TextArea
                label='Detail Produk'
                validation={{
                  required: 'Detail Produk mohon dijelaskan!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan detail produk yang valid. Hanya boleh mengandung huruf, angka, spasi, tanda hubung, tanda petik satu, koma, dan titik.',
                  },
                }}
                id='detail_produk'
                placeholder='Berikan detail produk secara singkat dan mudah dipahami'
                className={clsxm(
                  'py-2 px-3 min-h-[330px] sm:min-h-[132px]',
                  'border-[1.5px] border-neutral-20 rounded-md'
                )}
              />
              <DropzoneInput
                id='foto_produk'
                label='Foto Produk (Opsional)'
                accept={{ 'image/*': ['.png', '.jpg', '.jpeg'] }}
                className={clsxm('bg-whites-100')}
                helperText='Max file 3 MB.'
              />
              <Input
                id='link_gdrive'
                label='Link Google Drive Keperluan Pameran'
                placeholder='Masukkan link google drive keperluan pameran'
                validation={{
                  required: 'Link google drive tidak boleh kosong!',
                  pattern: {
                    value: REG_GOOGLE_DRIVE_URL,
                    message: 'Link google drive tidak valid',
                  },
                }}
              />
            </div>
            <Button
              type='submit'
              variant='success'
              disabled={modalOpen === true ? true : false}
              className='w-full drop-shadow-md py-3 sm:py-4 hover:bg-success-700 active:bg-success-800'
            >
              <Typography
                font='poppins'
                className='text-[14px] md:text-[16px] leading-[21px] sm:leading-6 text-white'
                weight='bold'
              >
                Daftar
              </Typography>
            </Button>
          </form>
          <Modal open={modalOpen} setOpen={setModalOpen}>
            <Modal.Title>Konfirmasi Data!</Modal.Title>
            <Modal.Body>
              <Typography font='poppins' className='text-[14px]'>
                Apakah Anda yakin bahwa data yang Anda masukkan sudah benar?
              </Typography>
              <div className='flex justify-end mt-6 gap-3'>
                <Button
                  disabled={daftarIsLoading ? true : false}
                  className='px-4 py-2 bg-success-600 hover:bg-success-700 active:bg-success-800'
                  type='submit'
                  onClick={() =>
                    handleConfirm(methods.getValues()).then(() =>
                      setModalOpen(false)
                    )
                  }
                >
                  <Typography font='poppins' className='text-[14px] text-white'>
                    Sudah
                  </Typography>
                </Button>
                <Button
                  disabled={daftarIsLoading ? true : false}
                  className='px-4 py-2 bg-danger-600 hover:bg-danger-700 active:bg-danger-800'
                  onClick={handleCancel}
                >
                  <Typography font='poppins' className='text-[14px] text-white'>
                    Belum
                  </Typography>
                </Button>
              </div>
            </Modal.Body>
          </Modal>
        </FormProvider>
      </div>
    </div>
  );
}
