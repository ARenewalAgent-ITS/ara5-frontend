'use client';

import { useMutation } from '@tanstack/react-query';
import { AxiosError, AxiosResponse } from 'axios';
import { useRouter } from 'next/navigation';
import { serialize } from 'object-to-formdata';
import React, { useState } from 'react';
import { FormProvider, useForm } from 'react-hook-form';

import Button from '@/components/buttons/Button';
import DropzoneInput from '@/components/form/DropzoneInput';
import Input from '@/components/form/Input';
import Modal from '@/components/modal/Modal';
import { DANGER_TOAST, showToast, SUCCESS_TOAST } from '@/components/Toast';
import Typography from '@/components/Typography';
import { REG_EMAIL, REG_GENERAL, REG_PHONE, REG_URL } from '@/constants/regex';
import api from '@/lib/api';
import clsxm from '@/lib/clsxm';
import { ApiError } from '@/types/api';
import {
  AddRegisterVisitor,
  RegisterExploVisitor,
} from '@/types/entities/register';

export default function ExploRegistVisitor() {
  const [modalOpen, setModalOpen] = useState(false);
  const router = useRouter();

  const { mutate: addExploVisitor } = useMutation<
    AxiosResponse<RegisterExploVisitor>,
    AxiosError<ApiError>,
    FormData
  >({
    mutationFn: (data) =>
      api.post('/peserta-exploit/daftar', data, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      }),
    onSuccess: () => {
      localStorage.setItem('daftarVisitorIsDone', 'true');
      showToast('Data sudah terkirim!', SUCCESS_TOAST);
      methods.reset();
      router.push('/exploit');
    },
    onError: () => {
      showToast('Terjadi Kesalahan!', DANGER_TOAST);
      throw new Error();
    },
  });

  const methods = useForm<AddRegisterVisitor>();
  const {
    handleSubmit,
    formState: { isDirty },
  } = methods;

  const onSubmit = () => {
    setModalOpen(true);
  };

  const handleConfirm = (data: AddRegisterVisitor) => {
    const body = {
      ...data,
      ss_repost_poster: data.ss_repost_poster ? data.ss_repost_poster[0] : null,
      ss_follow_ig: data.ss_follow_ig ? data.ss_follow_ig[0] : null,
      ss_follow_tiktok: data.ss_follow_tiktok ? data.ss_follow_tiktok[0] : null,
      ss_follow_sponsor: data.ss_follow_sponsor
        ? data.ss_follow_sponsor[0]
        : null,
    };
    addExploVisitor(serialize(body));
    // console.log({ data: data });
  };

  const handleCancel = () => {
    setModalOpen(false);
  };

  return (
    <div className='lg:px-4 xl:px-12 2xl:px-14'>
      <div className='flex flex-col justify-center gap-8 lg:gap-14 px-6 py-7 lg:px-0'>
        <div className='flex flex-col sm:flex-row sm:gap-3 sm:mx-auto lg:flex-col lg:mx-0'>
          <Typography
            variant='h3'
            font='baloo'
            weight='extrabold'
            className='lg:text-[48px] xl:text-[64px] text-[36px] leading-[64px] block text-whites-1100'
          >
            Pendaftaran Visitor ExploIT
          </Typography>
        </div>
        <FormProvider {...methods}>
          <form onSubmit={handleSubmit(onSubmit)} className='space-y-12'>
            <div className='space-y-6'>
              <Input
                disabled={true}
                id='nama'
                label='Nama Lengkap'
                placeholder='Masukkan nama lengkap'
                validation={{
                  required: 'Nama lengkap tidak boleh kosong!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan nama lengkap yang valid. Hanya boleh mengandung huruf, angka, spasi, tanda hubung, tanda petik satu, koma, dan titik.',
                  },
                }}
              />
              <Input
                disabled={true}
                id='email'
                label='Email'
                placeholder='Masukkan email'
                validation={{
                  required: 'Email tidak boleh kosong!',
                  pattern: {
                    value: REG_EMAIL,
                    message: 'Berikan alamat email yang sesuai!',
                  },
                }}
              />
              <Input
                disabled={true}
                id='no_wa'
                label='Nomor Telepon/WA'
                placeholder='Nomor telepon/wa, ex: +6281234567890.'
                validation={{
                  required: 'Nomor telepon/wa harap diisi!',
                  pattern: {
                    value: REG_PHONE,
                    message:
                      'Harap masukkan nomor telepon/wa yang valid dengan format yang sesuai, ex: +6281234567890.',
                  },
                }}
              />
              <Input
                disabled={true}
                id='institusi'
                label='Institusi / Sekolah'
                placeholder='Masukkan institusi asal / sekolah'
                validation={{
                  required: 'Institusi / Sekolah tidak boleh kosong!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan nama institusi yang valid. Hanya boleh mengandung huruf, angka, spasi, tanda hubung, tanda petik satu, koma, dan titik.',
                  },
                }}
              />
              <Input
                disabled={true}
                id='link_post_twibbon'
                label='Link Twibbon'
                placeholder='Masukkan link twibbon'
                validation={{
                  required: 'Link twibbon harap diisi!',
                  pattern: {
                    value: REG_URL,
                    message: 'Harap masukkan Link Twibbon yang valid!',
                  },
                }}
              />
              <DropzoneInput
                id='ss_repost_poster'
                label='Repost Poster'
                accept={{ 'image/*': ['.png', '.jpg', '.jpeg'] }}
                className={clsxm('bg-whites-100 hover:cursor-not-allowed')}
                helperText='Max file 3 MB.'
              />
              <DropzoneInput
                id='ss_follow_ig'
                label='Follow IG'
                accept={{ 'image/*': ['.png', '.jpg', '.jpeg'] }}
                className={clsxm('bg-whites-100 hover:cursor-not-allowed')}
                helperText='Max file 3 MB.'
              />
              <DropzoneInput
                id='ss_follow_tiktok'
                label='Follow Tik-Tok'
                accept={{ 'image/*': ['.png', '.jpg', '.jpeg'] }}
                className={clsxm('bg-whites-100 hover:cursor-not-allowed')}
                helperText='Max file 3 MB.'
              />
              <DropzoneInput
                id='ss_follow_sponsor'
                label='Follow Sponsor'
                accept={{ 'image/*': ['.png', '.jpg', '.jpeg'] }}
                className={clsxm('bg-whites-100 hover:cursor-not-allowed')}
                helperText='Max file 3 MB.'
              />
            </div>
            <Button
              type='submit'
              variant='black'
              // disabled={modalOpen ? true : false}
              disabled={true}
              // className='w-full drop-shadow-md py-3 sm:py-4 hover:bg-success-700 active:bg-success-800'
              className='w-full drop-shadow-md py-3 sm:py-4'
            >
              <Typography
                font='poppins'
                className='text-[14px] md:text-[16px] leading-[21px] sm:leading-6 text-white'
                weight='bold'
              >
                Sedang dalam perbaikan
              </Typography>
            </Button>
          </form>
          <Modal open={modalOpen} setOpen={setModalOpen}>
            <Modal.Title>Konfirmasi Data!</Modal.Title>
            <Modal.Body>
              <Typography font='poppins' className='text-[14px]'>
                Apakah Anda yakin bahwa data yang Anda masukkan sudah benar?
              </Typography>
              <div className='flex justify-end mt-6 gap-3'>
                <Button
                  disabled={!isDirty ? true : false}
                  className='px-4 py-2 bg-success-600 hover:bg-success-700 active:bg-success-800'
                  type='submit'
                  onClick={() => handleConfirm(methods.getValues())}
                >
                  <Typography font='poppins' className='text-[14px] text-white'>
                    Sudah
                  </Typography>
                </Button>
                <Button
                  disabled={!isDirty ? true : false}
                  className='px-4 py-2 bg-danger-600 hover:bg-danger-700 active:bg-danger-800'
                  onClick={handleCancel}
                >
                  <Typography font='poppins' className='text-[14px] text-white'>
                    Belum
                  </Typography>
                </Button>
              </div>
            </Modal.Body>
          </Modal>
        </FormProvider>
      </div>
    </div>
  );
}
