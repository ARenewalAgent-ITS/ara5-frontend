'use client';

import { useMutation } from '@tanstack/react-query';
import React from 'react';
import { FormProvider, useForm } from 'react-hook-form';

import Button from '@/components/buttons/Button';
import DropzoneInput from '@/components/form/DropzoneInput';
import Input from '@/components/form/Input';
import TextArea from '@/components/form/TextArea';
import Typography from '@/components/Typography';
import {
  REG_EMAIL,
  REG_FULL_NAME,
  REG_GENERAL,
  REG_GOOGLE_DRIVE_URL,
  REG_NISN,
  REG_PHONE,
} from '@/constants/regex';
import useDialog from '@/hooks/useDialog';
import useMutationToast from '@/hooks/useMutationToast';
import api from '@/lib/api';
import clsxm from '@/lib/clsxm';
import { RegisterExploTenant } from '@/types/entities/register';

export default function ExploRegist() {
  // const [selectedProvinsiId, setSelectedProvinsiId] = React.useState<
  //   null | number
  // >(null);
  // const [kabupatenData, setKabupatenData] = React.useState<Array<TKabupaten>>(
  //   []
  // );

  //#region  //*=========== Register Form ===========

  const methods = useForm<RegisterExploTenant>();

  //#region  //*=========== Wilayah API ===========

  // const { data: provinsiData } = useQuery<ApiReturn<Array<TProvinsi>>>({
  //   queryKey: ['/wilayah/provinsi'],
  //   staleTime: Infinity,
  // });

  // const getKabupatenQuery = async (provinsiId: number) => {
  //   try {
  //     const response = await api.get(`/wilayah/kabupaten/${provinsiId}`);
  //     return response.data;
  //   } catch (error) {
  //     throw new Error('Terjadi kesalahan dalam mengambil kabupaten');
  //   }
  // };

  // const { mutate: getKabupaten } = useMutation(getKabupatenQuery, {
  //   onSuccess: (data) => {
  //     setKabupatenData(data.data);
  //   },
  // });

  // React.useEffect(() => {
  //   if (selectedProvinsiId) {
  //     getKabupaten(selectedProvinsiId);
  //   }
  // }, [selectedProvinsiId, getKabupaten]);

  const { mutateAsync: daftar, isLoading: daftarIsLoading } = useMutationToast<
    void,
    RegisterExploTenant
  >(
    useMutation(
      (data) => {
        return api.post('/exploit/register', data);
      },
      {
        onSuccess: () => {
          localStorage.setItem('daftarTenantIsDone', 'true');
        },
      }
    )
  );

  const dialog = useDialog();

  const onSubmit = async (data: RegisterExploTenant) => {
    const formData: RegisterExploTenant = {
      nama_tenant: data.nama_tenant,
      institusi: data.institusi,
      bidang_teknologi: data.bidang_teknologi,
      nama_ketua: data.nama_ketua,
      nisn_ketua: data.nisn_ketua,
      kartu_pelajar: data.kartu_pelajar,
      email_ketua: data.email_ketua,
      no_wa_ketua: data.no_wa_ketua,
      nama_produk: data.nama_produk,
      detail_produk: data?.detail_produk,
      foto_produk: data?.foto_produk,
      link_gdrive: data.link_gdrive,
    };

    dialog({
      title: 'Pastikan data yang Anda masukkan sudah benar!',
      description:
        'Apakah Anda yakin bahwa data yang Anda masukkan sudah benar?',
      submitText: 'Sudah benar',
      cancelText: 'Belum',
      catchOnCancel: true,
    }).then(() => daftar(formData));
    // console.log(formData);

    // .then(() => {
    //   onNextStep();
    // });
  };
  return (
    <div className='lg:px-4 xl:px-12 2xl:px-14'>
      <div className='flex flex-col justify-center gap-8 lg:gap-14 px-6 py-7 lg:px-0'>
        <div className='flex flex-col sm:flex-row sm:gap-3 sm:mx-auto lg:flex-col lg:mx-0'>
          <Typography
            variant='h3'
            font='baloo'
            weight='extrabold'
            className='lg:text-[48px] xl:text-[64px] text-[36px] leading-[64px] block text-whites-1100'
          >
            Pendaftaran Tenant ExploIT
          </Typography>
        </div>
        <FormProvider {...methods}>
          <form
            onSubmit={methods.handleSubmit(onSubmit)}
            className='space-y-12'
          >
            <div className='space-y-6'>
              <Input
                id='nama_tenant'
                label='Nama Tenant'
                placeholder='Masukkan nama tenant'
                validation={{
                  required: 'Nama Tenant tidak boleh kosong!',
                  pattern: {
                    value: REG_FULL_NAME,
                    message:
                      'Harap masukkan nama tenant yang valid. Hanya boleh mengandung huruf, spasi, tanda hubung, dan tanda petik satu.',
                  },
                }}
              />
              <Input
                id='institusi'
                label='Institusi / Sekolah'
                placeholder='Masukkan institusi asal / sekolah'
                validation={{
                  required: 'Institusi / Sekolah tidak boleh kosong!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan nama institusi yang valid. Hanya boleh mengandung huruf, spasi, tanda hubung, dan tanda petik satu.',
                  },
                }}
              />
              <Input
                id='bidang_teknologi'
                label='Bidang Teknologi'
                placeholder='Masukkan bidang teknologi'
                validation={{
                  required: 'Bidang teknologi harap diisi!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan bidang teknologi yang valid. Hanya boleh mengandung huruf, spasi, tanda hubung, dan tanda petik satu.',
                  },
                }}
              />
              <Input
                id='nama_ketua'
                label='Nama Ketua'
                placeholder='Masukkan nama ketua'
                validation={{
                  required: 'Nama Ketua tidak boleh kosong!',
                  pattern: {
                    value: REG_FULL_NAME,
                    message:
                      'Harap masukkan nama lengkap yang valid. Hanya boleh mengandung huruf, spasi, tanda hubung, dan tanda petik satu.',
                  },
                }}
              />
              <Input
                id='nisn_ketua'
                label='NISN Ketua'
                placeholder='Masukkan NISN ketua'
                validation={{
                  required: 'NISN Ketua tidak boleh kosong!',
                  pattern: {
                    value: REG_NISN,
                    message:
                      'Harap masukkan NISN yang valid. Terdiri dari 10 digit angka.',
                  },
                }}
              />
              {/* <SelectInput
                id='team_provinsi_id'
                label='Provinsi'
                validation={{
                  required: 'Provinsi cannot be empty',
                }}
                placeholder='Masukkan provinsi sekolah / institusi asal'
                onChange={(e) => setSelectedProvinsiId(Number(e.target.value))}
              >
                {provinsiData?.data?.map(({ id, nama }) => (
                  <option key={id} value={id}>
                    {nama}
                  </option>
                ))}
              </SelectInput> */}
              {/* <SelectInput
                id='team_kabupaten_id'
                label='Kota / Kabupaten'
                validation={{
                  required: 'Kota / Kabupaten cannot be empty',
                }}
                placeholder='Masukkan kota / kabupaten sekolah / institusi asal'
              >
                {kabupatenData?.map(({ id, kabupaten }) => (
                  <option key={id} value={id}>
                    {kabupaten}
                  </option>
                ))}
              </SelectInput> */}
              <DropzoneInput
                id='kartu_pelajar'
                label='Kartu Pelajar (Opsional)'
                accept={{ 'image/*': ['.png', '.jpg', '.jpeg'] }}
                className={clsxm('bg-whites-100')}
                helperText='Max file 3 MB.'
              />
              <Input
                id='email_ketua'
                label='Email Ketua'
                placeholder='Masukkan email ketua'
                validation={{
                  required: 'Email ketua tidak boleh kosong!',
                  pattern: {
                    value: REG_EMAIL,
                    message: 'Berikan alamat email yang sesuai!',
                  },
                }}
              />
              <Input
                id='no_wa_ketua'
                label='Nomor Telepon/WA Ketua'
                placeholder='Nomor telepon/wa ketua, ex: +6281234567890.'
                validation={{
                  required: 'Nomor telepon ketua harap diisi!',
                  pattern: {
                    value: REG_PHONE,
                    message:
                      'Harap masukkan nomor telepon/wa yang valid dengan format yang sesuai, ex: +6281234567890.',
                  },
                }}
              />
              <Input
                id='nama_produk'
                label='Nama Produk'
                placeholder='Masukkan nama produk'
                validation={{
                  required: 'Nama Produk perlu diisi!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan nama produk yang valid. Hanya boleh mengandung huruf, spasi, tanda hubung, dan tanda petik satu.',
                  },
                }}
              />
              <TextArea
                label='Detail Produk'
                validation={{
                  required: 'Detail Produk mohon dijelaskan!',
                  pattern: {
                    value: REG_GENERAL,
                    message:
                      'Harap masukkan detail produk yang valid. Hanya boleh mengandung huruf, spasi, tanda hubung, dan tanda petik satu.',
                  },
                }}
                id='detail_produk'
                placeholder='Berikan detail produk secara singkat dan mudah dipahami'
                className={clsxm(
                  'py-2 px-3 min-h-[330px] sm:min-h-[132px]',
                  'border-[1.5px] border-neutral-20 rounded-md'
                )}
                // value={revisiMassage}
                // onChange={(e) => setRevisiMassage
              />
              <DropzoneInput
                id='foto_produk'
                label='Foto Produk (Opsional)'
                accept={{ 'image/*': ['.png', '.jpg', '.jpeg'] }}
                className={clsxm('bg-whites-100')}
                helperText='Max file 3 MB.'
              />
              <Input
                id='link_gdrive'
                label='Link Google Drive Keperluan Pameran'
                placeholder='Masukkan link google drive keperluan pameran'
                validation={{
                  required: 'Link google drive tidak boleh kosong!',
                  pattern: {
                    value: REG_GOOGLE_DRIVE_URL,
                    message: 'Link google drive tidak valid',
                  },
                }}
              />
            </div>
            <Button
              type='submit'
              size='lg'
              variant='success'
              isLoading={daftarIsLoading}
              className='w-full drop-shadow-md py-[6px] md:py-3'
            >
              <Typography
                font='poppins'
                variant='bt'
                className='text-[11.86px] leading-[20.32px] text-whites-100'
                weight='bold'
              >
                Daftar
              </Typography>
            </Button>
          </form>
        </FormProvider>
      </div>
    </div>
  );
}
